def plot_velocity_distribution(rect, times):
    # Построение распределения скоростей для разных моментов времени
    fig, axs = plt.subplots(1, len(times), figsize=(15, 5))
    fig.canvas.manager.set_window_title("Распределение скоростей")

    x = np.linspace(-20, 20, 30)
    y = np.linspace(-20, 20, 30)
    X, Y = np.meshgrid(x, y)

    for idx, t in enumerate(times):
        U = np.zeros_like(X)
        V = np.zeros_like(Y)
        for i in range(X.shape[0]):
            for j in range(X.shape[1]):
                U[i, j], V[i, j] = rect.get_velocity(t, X[i, j], Y[i, j])
        axs[idx].quiver(X, Y, U, V, scale=50, color='green')
        axs[idx].set_title(f"Распределение скоростей при t = {t}")
        axs[idx].set_xlim(-20, 20)
        axs[idx].set_ylim(-20, 20)
        axs[idx].axhline(0, color='black', linewidth=0.5)
        axs[idx].axvline(0, color='black', linewidth=0.5)
        axs[idx].grid(color='gray', linestyle='--', linewidth=0.5)

    plt.tight_layout()
    plt.show()


def plot_streamlines(rect, times):
    # Построение линий тока для разных моментов времени
    fig, axs = plt.subplots(1, len(times), figsize=(15, 5))
    fig.canvas.manager.set_window_title("Линии тока")

    x = np.linspace(-20, 20, 30)
    y = np.linspace(-20, 20, 30)
    X, Y = np.meshgrid(x, y)

    for idx, t in enumerate(times):
        U = np.zeros_like(X)
        V = np.zeros_like(Y)
        for i in range(X.shape[0]):
            for j in range(X.shape[1]):
                U[i, j], V[i, j] = rect.get_velocity(t, X[i, j], Y[i, j])

        axs[idx].streamplot(X, Y, U, V, color='blue', density=2, arrowstyle='->', arrowsize=1.5)
        axs[idx].set_title(f"Линии тока при t = {t}")
        axs[idx].set_xlim(-20, 20)
        axs[idx].set_ylim(-20, 20)
        axs[idx].axhline(0, color='black', linewidth=0.5)
        axs[idx].axvline(0, color='black', linewidth=0.5)
        axs[idx].grid(color='gray', linestyle='--', linewidth=0.5)

    plt.tight_layout()
    plt.show()
